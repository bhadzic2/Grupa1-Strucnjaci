// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SpaceCat.Data;

namespace SpaceCat.Migrations
{
    [DbContext(typeof(SpaceCatContext))]
    [Migration("20210612024015_PrvaMigracija")]
    partial class PrvaMigracija
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.16")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("SpaceCat.Anketa", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("mackeKojeSuUcestvovale")
                        .HasColumnType("text");

                    b.HasKey("ID");

                    b.ToTable("Anketa");
                });

            modelBuilder.Entity("SpaceCat.Destinacija", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Paket")
                        .HasColumnType("int");

                    b.Property<string>("Slika")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("ID");

                    b.ToTable("Destinacija");
                });

            modelBuilder.Entity("SpaceCat.Faq", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Odgovor")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Pitanje")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("ID");

                    b.ToTable("Faq");
                });

            modelBuilder.Entity("SpaceCat.Komentar", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("MackaID")
                        .HasColumnType("int");

                    b.Property<int>("NovostID")
                        .HasColumnType("int");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("VrijemeObjave")
                        .HasColumnType("datetime");

                    b.HasKey("ID");

                    b.HasIndex("MackaID");

                    b.HasIndex("NovostID");

                    b.ToTable("Komentar");
                });

            modelBuilder.Entity("SpaceCat.Macka", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("DestinacijaID")
                        .HasColumnType("int");

                    b.Property<long>("DobMacke")
                        .HasColumnType("bigint");

                    b.Property<string>("Drzava")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ImeMacke")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ImeVlasnika")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("Kompetentna")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("KorisnickoIme")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Lozinka")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("Odabrana")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("OdabranaRanije")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("Paket")
                        .HasColumnType("int");

                    b.Property<int>("Pol")
                        .HasColumnType("int");

                    b.Property<string>("Slika")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<double>("VjerovatnocaOdabira")
                        .HasColumnType("double");

                    b.Property<bool>("ZdravaMacka")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("ID");

                    b.HasIndex("DestinacijaID");

                    b.ToTable("Macka");
                });

            modelBuilder.Entity("SpaceCat.Novost", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Naslov")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("VrijemeObjave")
                        .HasColumnType("datetime");

                    b.HasKey("ID");

                    b.ToTable("Novost");
                });

            modelBuilder.Entity("SpaceCat.Putovanje", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("DestinacijaID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("KrajPutovanja")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("VrijemePolaska")
                        .HasColumnType("datetime");

                    b.Property<string>("mackeZaPutovanje")
                        .HasColumnType("text");

                    b.HasKey("ID");

                    b.HasIndex("DestinacijaID");

                    b.ToTable("Putovanje");
                });

            modelBuilder.Entity("SpaceCat.Utisak", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("MackaID")
                        .HasColumnType("int");

                    b.Property<int>("Ocjena")
                        .HasColumnType("int");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("ID");

                    b.HasIndex("MackaID");

                    b.ToTable("Utisak");
                });

            modelBuilder.Entity("SpaceCat.Komentar", b =>
                {
                    b.HasOne("SpaceCat.Macka", "Macka")
                        .WithMany()
                        .HasForeignKey("MackaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SpaceCat.Novost", "Novost")
                        .WithMany()
                        .HasForeignKey("NovostID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SpaceCat.Macka", b =>
                {
                    b.HasOne("SpaceCat.Destinacija", "Destinacija")
                        .WithMany()
                        .HasForeignKey("DestinacijaID");
                });

            modelBuilder.Entity("SpaceCat.Putovanje", b =>
                {
                    b.HasOne("SpaceCat.Destinacija", "Destinacija")
                        .WithMany()
                        .HasForeignKey("DestinacijaID");
                });

            modelBuilder.Entity("SpaceCat.Utisak", b =>
                {
                    b.HasOne("SpaceCat.Macka", "Macka")
                        .WithMany()
                        .HasForeignKey("MackaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
